{"version":3,"sources":["js/reducers/index.js","js/constants/action-types.js","js/middleware/index.js","js/store/index.js","js/components/List.js","js/components/Form.js","js/actions/index.js","js/components/Posts.js","js/components/App.js","index.js"],"names":["initialState","articles","remoteArticles","rootReducer","state","action","type","Object","assign","concat","payload","forbiddenWords","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","dispatch","next","filter","word","title","includes","length","thunk","List","connect","map","el","key","id","ConnectedForm","props","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","addArticle","onSubmit","htmlFor","onChange","Component","Form","article","Post","getData","slice","fetch","then","response","json","App","render","document","getElementById"],"mappings":"uNAGMA,EAAe,CACjBC,SAAU,GACVC,eAAgB,IAoBLC,MAjBf,WAAoD,IAA/BC,EAA8B,uDAAtBJ,EAAcK,EAAQ,uCAE/C,MCVuB,gBDUnBA,EAAOC,KACAC,OAAOC,OAAO,GAAIJ,EAAO,CAC5BH,SAAUG,EAAMH,SAASQ,OAAOJ,EAAOK,WCXxB,gBDenBL,EAAOC,KACAC,OAAOC,OAAO,GAAIJ,EAAO,CAC5BF,eAAgBE,EAAMF,eAAeO,OAAOJ,EAAOK,WAIpDN,GEpBLO,EAAiB,CAAC,OAAQ,S,YCG1BC,EAAiBC,OAAOC,sCAAwCC,IAOvDC,EALDC,YACVd,EACAS,EAAeM,aDLZ,YAAiD,IAAbC,EAAY,EAAZA,SACvC,OAAO,SAASC,GACZ,OAAO,SAASf,GAEZ,GDRe,gBCQXA,EAAOC,MAEWK,EAAeU,QAAO,SAAAC,GAAI,OACxCjB,EAAOK,QAAQa,MAAMC,SAASF,MAGpBG,OACV,OAAON,EAAS,CAAEb,KAAM,mBAGhC,OAAOc,EAAKf,OCTqCqB,OCQ9CC,EAFFC,aAZW,SAAAxB,GACpB,MAAO,CAAEH,SAAUG,EAAMH,YAWhB2B,EARS,SAAC,GAAD,IAAG3B,EAAH,EAAGA,SAAH,OAClB,4BACKA,EAAS4B,KAAI,SAAAC,GAAE,OACZ,wBAAIC,IAAKD,EAAGE,IAAKF,EAAGP,c,wDCA1BU,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACD9B,MAAQ,CACTmB,MAAO,IAEX,EAAKY,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANL,E,0EASNE,GACTC,KAAKC,SAAL,eAAiBF,EAAMG,OAAOT,GAAKM,EAAMG,OAAOC,U,mCAGvCJ,GACTA,EAAMK,iBADU,IAERpB,EAAUgB,KAAKnC,MAAfmB,MACRgB,KAAKL,MAAMU,WAAW,CAAErB,UACxBgB,KAAKC,SAAS,CAAEjB,MAAO,O,+BAGjB,IACEA,EAAUgB,KAAKnC,MAAfmB,MACR,OACI,0BAAMsB,SAAUN,KAAKF,cACjB,6BACI,2BAAOS,QAAQ,SAAf,SACA,2BACIxC,KAAK,OACL0B,GAAG,QACHU,MAAOnB,EACPwB,SAAUR,KAAKJ,gBAGvB,4BAAQ7B,KAAK,UAAb,a,GAlCY0C,aA6CbC,EALFrB,YACT,MA/CJ,SAA4BT,GACxB,MAAO,CACHyB,WAAY,SAAAM,GAAO,OAAI/B,ECDpB,CAAEb,KLLc,cKKKI,QDCmBwC,QA4CtCtB,CAGXK,GEjDWkB,EAAb,4LAGQZ,KAAKL,MAAMkB,YAHnB,+BAOQ,OACI,4BACKb,KAAKL,MAAMjC,SAAS4B,KAAI,SAAAC,GAAE,OACvB,wBAAIC,IAAKD,EAAGE,IAAKF,EAAGP,eAVxC,GAA0ByB,aAuBXpB,mBANf,SAAyBxB,GACrB,MAAO,CACHH,SAAUG,EAAMF,eAAemD,MAAM,EAAG,OAM5C,CAAED,QDpBC,WACH,OAAO,SAASjC,GACZ,OAAOmC,MAAM,8CACZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACFtC,EAAS,CAAEb,KLbI,cKaeI,QAAS+C,UCapC7B,CAGbuB,GCRaO,EAjBH,kBACR,oCACI,6BACI,wCACA,kBAAC,EAAD,OAEJ,6BACI,iDACA,kBAAC,EAAD,OAEJ,6BACI,yCACA,kBAAC,EAAD,SCXZC,iBACI,kBAAC,IAAD,CAAU3C,MAAOA,GACb,kBAAC,EAAD,OAEJ4C,SAASC,eAAe,W","file":"static/js/main.73c7d6c1.chunk.js","sourcesContent":["import { ADD_ARTICLE } from \"../constants/action-types\";\nimport { DATA_LOADED } from \"../constants/action-types\";\n\nconst initialState = {\n    articles: [],\n    remoteArticles: []\n};\n\nfunction rootReducer(state = initialState, action) {\n\n    if (action.type === ADD_ARTICLE) {\n        return Object.assign({}, state, {\n            articles: state.articles.concat(action.payload)\n        });\n    }\n\n    if (action.type === DATA_LOADED) {\n        return Object.assign({}, state, {\n            remoteArticles: state.remoteArticles.concat(action.payload)\n        });\n    }\n\n    return state;\n};\n\nexport default rootReducer;","export const ADD_ARTICLE = \"ADD_ARTICLE\";\nexport const DATA_LOADED = \"DATA_LOADED\";","import { ADD_ARTICLE } from \"../constants/action-types\";\n\nconst forbiddenWords = ['spam', 'money'];\n\nexport function forbiddenWordsMiddleware({ dispatch }) {\n    return function(next) {\n        return function(action) {\n            // do your stuff\n            if (action.type === ADD_ARTICLE) {\n                \n                const foundWord = forbiddenWords.filter(word =>\n                    action.payload.title.includes(word)\n                );\n\n                if (foundWord.length) {\n                    return dispatch({ type: \"FOUND_BAD_WORD\" });\n                }\n            }\n            return next(action);\n        };\n    };\n}","import { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport { forbiddenWordsMiddleware } from \"../middleware\";\nimport thunk from \"redux-thunk\";\n\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    storeEnhancers(applyMiddleware(forbiddenWordsMiddleware, thunk))\n);\n\nexport default store;","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = state => {\n    return { articles: state.articles };\n};\n\nconst ConnectedList = ({ articles }) => (\n    <ul>\n        {articles.map(el => (\n            <li key={el.id}>{el.title}</li>\n        ))}\n    </ul>\n);\n\nconst List = connect(mapStateToProps)(ConnectedList);\n\nexport default List;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addArticle } from \"../actions/index\";\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addArticle: article => dispatch(addArticle(article))\n    };\n}\n\nclass ConnectedForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: \"\"\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ [event.target.id]: event.target.value });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { title } = this.state;\n        this.props.addArticle({ title });\n        this.setState({ title: \"\" });\n    }\n\n    render() {\n        const { title } = this.state;\n        return(\n            <form onSubmit={this.handleSubmit}>\n                <div>\n                    <label htmlFor=\"title\">Title</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        value={title}\n                        onChange={this.handleChange}\n                    />\n                </div>\n                <button type=\"submit\">SAVE</button>\n            </form>\n        );\n    }\n}\n\nconst Form = connect(\n    null,\n    mapDispatchToProps\n)(ConnectedForm);\n\nexport default Form;","import { ADD_ARTICLE } from \"../constants/action-types\";\nimport { DATA_LOADED } from \"../constants/action-types\";\n\n// ACTION CREATOR\nexport function addArticle(payload) {\n    return { type: ADD_ARTICLE, payload };\n};\n\n// our new action creator\nexport function getData() {\n    return function(dispatch) {\n        return fetch(\"https://jsonplaceholder.typicode.com/posts\")\n        .then(response => response.json())\n        .then(json => {\n            dispatch({ type: DATA_LOADED, payload: json });\n        });\n    };\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getData } from \"../actions/index\";\n\nexport class Post extends Component {\n    componentDidMount() {\n        // calling the new action creator\n        this.props.getData();\n    }\n\n    render() {\n        return (\n            <ul>\n                {this.props.articles.map(el => (\n                    <li key={el.id}>{el.title}</li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        articles: state.remoteArticles.slice(0, 10)\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    { getData }\n)(Post);","import React from \"react\";\nimport List from \"./List\";\nimport Form from \"./Form\";\nimport Post from \"./Posts\";\n\nconst App = () => (\n    <>\n        <div>\n            <h2>Articles</h2>\n            <List />\n        </div>\n        <div>\n            <h2>Add a new article</h2>\n            <Form />\n        </div>\n        <div>\n            <h2>API posts</h2>\n            <Post />\n        </div>\n    </>\n);\n\nexport default App;","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport App from \"./js/components/App\";\n\nrender (\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}